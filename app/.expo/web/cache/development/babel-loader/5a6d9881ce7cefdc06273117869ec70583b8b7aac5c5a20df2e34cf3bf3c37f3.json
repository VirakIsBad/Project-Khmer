{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar TurboModuleRegistry = _interopRequireWildcard(require(\"../TurboModule/TurboModuleRegistry\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar Platform = require('../Utilities/Platform');\nvar NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');\nvar ExceptionsManager = {\n  reportFatalException: function reportFatalException(message, stack, exceptionId) {\n    NativeModule.reportFatalException(message, stack, exceptionId);\n  },\n  reportSoftException: function reportSoftException(message, stack, exceptionId) {\n    NativeModule.reportSoftException(message, stack, exceptionId);\n  },\n  updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {\n    NativeModule.updateExceptionMessage(message, stack, exceptionId);\n  },\n  dismissRedbox: function dismissRedbox() {\n    if (Platform.OS !== 'ios' && NativeModule.dismissRedbox) {\n      NativeModule.dismissRedbox();\n    }\n  },\n  reportException: function reportException(data) {\n    if (NativeModule.reportException) {\n      NativeModule.reportException(data);\n      return;\n    }\n    if (data.isFatal) {\n      ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n    } else {\n      ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n    }\n  }\n};\nvar _default = exports.default = ExceptionsManager;","map":{"version":3,"names":["TurboModuleRegistry","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Platform","NativeModule","getEnforcing","ExceptionsManager","reportFatalException","message","stack","exceptionId","reportSoftException","updateExceptionMessage","dismissRedbox","OS","reportException","data","isFatal","id","_default","exports"],"sources":["/Users/chanvirakphal/Project-Khmer/app/node_modules/react-native/Libraries/Core/NativeExceptionsManager.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nconst Platform = require('../Utilities/Platform');\n\nexport type StackFrame = {|\n  column: ?number,\n  file: ?string,\n  lineNumber: ?number,\n  methodName: string,\n  collapse?: boolean,\n|};\nexport type ExceptionData = {\n  message: string,\n  originalMessage: ?string,\n  name: ?string,\n  componentStack: ?string,\n  stack: Array<StackFrame>,\n  id: number,\n  isFatal: boolean,\n  // flowlint-next-line unclear-type:off\n  extraData?: Object,\n  ...\n};\nexport interface Spec extends TurboModule {\n  // Deprecated: Use `reportException`\n  +reportFatalException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // Deprecated: Use `reportException`\n  +reportSoftException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  +reportException?: (data: ExceptionData) => void;\n  +updateExceptionMessage: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // TODO(T53311281): This is a noop on iOS now. Implement it.\n  +dismissRedbox?: () => void;\n}\n\nconst NativeModule =\n  TurboModuleRegistry.getEnforcing<Spec>('ExceptionsManager');\n\nconst ExceptionsManager = {\n  reportFatalException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportFatalException(message, stack, exceptionId);\n  },\n  reportSoftException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportSoftException(message, stack, exceptionId);\n  },\n  updateExceptionMessage(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.updateExceptionMessage(message, stack, exceptionId);\n  },\n  dismissRedbox(): void {\n    if (Platform.OS !== 'ios' && NativeModule.dismissRedbox) {\n      // TODO(T53311281): This is a noop on iOS now. Implement it.\n      NativeModule.dismissRedbox();\n    }\n  },\n  reportException(data: ExceptionData): void {\n    if (NativeModule.reportException) {\n      NativeModule.reportException(data);\n      return;\n    }\n    if (data.isFatal) {\n      ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n    } else {\n      ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n    }\n  },\n};\n\nexport default ExceptionsManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}