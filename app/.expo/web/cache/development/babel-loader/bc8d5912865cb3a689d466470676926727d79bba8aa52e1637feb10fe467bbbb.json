{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _normalizeColor = _interopRequireDefault(require(\"../../StyleSheet/normalizeColor\"));\nvar _PlatformColorValueTypes = require(\"../../StyleSheet/PlatformColorValueTypes\");\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\nvar _AnimatedValue = _interopRequireWildcard(require(\"./AnimatedValue\"));\nvar _AnimatedWithChildren2 = _interopRequireDefault(require(\"./AnimatedWithChildren\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\nvar defaultColor = {\n  r: 0,\n  g: 0,\n  b: 0,\n  a: 1.0\n};\nfunction processColor(color) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n  if (isRgbaValue(color)) {\n    return color;\n  }\n  var normalizedColor = (0, _normalizeColor.default)(color);\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n  if (typeof normalizedColor === 'object') {\n    var processedColorObj = (0, _PlatformColorValueTypes.processColorObject)(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    var r = (normalizedColor & 0xff000000) >>> 24;\n    var g = (normalizedColor & 0x00ff0000) >>> 16;\n    var b = (normalizedColor & 0x0000ff00) >>> 8;\n    var a = (normalizedColor & 0x000000ff) / 255;\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n  return null;\n}\nfunction isRgbaValue(value) {\n  return value && typeof value.r === 'number' && typeof value.g === 'number' && typeof value.b === 'number' && typeof value.a === 'number';\n}\nfunction isRgbaAnimatedValue(value) {\n  return value && value.r instanceof _AnimatedValue.default && value.g instanceof _AnimatedValue.default && value.b instanceof _AnimatedValue.default && value.a instanceof _AnimatedValue.default;\n}\nvar AnimatedColor = exports.default = function (_AnimatedWithChildren) {\n  (0, _inherits2.default)(AnimatedColor, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedColor);\n  function AnimatedColor(valueIn, config) {\n    var _this;\n    (0, _classCallCheck2.default)(this, AnimatedColor);\n    _this = _super.call(this);\n    _this._suspendCallbacks = 0;\n    var value = valueIn != null ? valueIn : defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      var rgbaAnimatedValue = value;\n      _this.r = rgbaAnimatedValue.r;\n      _this.g = rgbaAnimatedValue.g;\n      _this.b = rgbaAnimatedValue.b;\n      _this.a = rgbaAnimatedValue.a;\n    } else {\n      var _processColor;\n      var processedColor = (_processColor = processColor(value)) != null ? _processColor : defaultColor;\n      var initColor = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        initColor = processedColor;\n      } else {\n        _this.nativeColor = processedColor;\n      }\n      _this.r = new _AnimatedValue.default(initColor.r);\n      _this.g = new _AnimatedValue.default(initColor.g);\n      _this.b = new _AnimatedValue.default(initColor.b);\n      _this.a = new _AnimatedValue.default(initColor.a);\n    }\n    if (config != null && config.useNativeDriver) {\n      _this.__makeNative();\n    }\n    return _this;\n  }\n  (0, _createClass2.default)(AnimatedColor, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      var _processColor2,\n        _this2 = this;\n      var shouldUpdateNodeConfig = false;\n      if (this.__isNative) {\n        var nativeTag = this.__getNativeTag();\n        NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n      }\n      var processedColor = (_processColor2 = processColor(value)) != null ? _processColor2 : defaultColor;\n      this._withSuspendedCallbacks(function () {\n        if (isRgbaValue(processedColor)) {\n          var rgbaValue = processedColor;\n          _this2.r.setValue(rgbaValue.r);\n          _this2.g.setValue(rgbaValue.g);\n          _this2.b.setValue(rgbaValue.b);\n          _this2.a.setValue(rgbaValue.a);\n          if (_this2.nativeColor != null) {\n            _this2.nativeColor = null;\n            shouldUpdateNodeConfig = true;\n          }\n        } else {\n          var nativeColor = processedColor;\n          if (_this2.nativeColor !== nativeColor) {\n            _this2.nativeColor = nativeColor;\n            shouldUpdateNodeConfig = true;\n          }\n        }\n      });\n      if (this.__isNative) {\n        var _nativeTag = this.__getNativeTag();\n        if (shouldUpdateNodeConfig) {\n          NativeAnimatedAPI.updateAnimatedNodeConfig(_nativeTag, this.__getNativeConfig());\n        }\n        NativeAnimatedAPI.unsetWaitingForIdentifier(_nativeTag.toString());\n      } else {\n        (0, _AnimatedValue.flushValue)(this);\n      }\n      this.__callListeners(this.__getValue());\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this.r.setOffset(offset.r);\n      this.g.setOffset(offset.g);\n      this.b.setOffset(offset.b);\n      this.a.setOffset(offset.a);\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this.r.flattenOffset();\n      this.g.flattenOffset();\n      this.b.flattenOffset();\n      this.a.flattenOffset();\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this.r.extractOffset();\n      this.g.extractOffset();\n      this.b.extractOffset();\n      this.a.extractOffset();\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.r.stopAnimation();\n      this.g.stopAnimation();\n      this.b.stopAnimation();\n      this.a.stopAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.r.resetAnimation();\n      this.g.resetAnimation();\n      this.b.resetAnimation();\n      this.a.resetAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (this.nativeColor != null) {\n        return this.nativeColor;\n      } else {\n        return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n      }\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this.r.__addChild(this);\n      this.g.__addChild(this);\n      this.b.__addChild(this);\n      this.a.__addChild(this);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedColor.prototype), \"__attach\", this).call(this);\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      this.r.__removeChild(this);\n      this.g.__removeChild(this);\n      this.b.__removeChild(this);\n      this.a.__removeChild(this);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedColor.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"_withSuspendedCallbacks\",\n    value: function _withSuspendedCallbacks(callback) {\n      this._suspendCallbacks++;\n      callback();\n      this._suspendCallbacks--;\n    }\n  }, {\n    key: \"__callListeners\",\n    value: function __callListeners(value) {\n      if (this._suspendCallbacks === 0) {\n        (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedColor.prototype), \"__callListeners\", this).call(this, value);\n      }\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this.r.__makeNative(platformConfig);\n      this.g.__makeNative(platformConfig);\n      this.b.__makeNative(platformConfig);\n      this.a.__makeNative(platformConfig);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedColor.prototype), \"__makeNative\", this).call(this, platformConfig);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      return {\n        type: 'color',\n        r: this.r.__getNativeTag(),\n        g: this.g.__getNativeTag(),\n        b: this.b.__getNativeTag(),\n        a: this.a.__getNativeTag(),\n        nativeColor: this.nativeColor\n      };\n    }\n  }]);\n  return AnimatedColor;\n}(_AnimatedWithChildren2.default);","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_normalizeColor","_PlatformColorValueTypes","_NativeAnimatedHelper","_AnimatedValue","_interopRequireWildcard","_AnimatedWithChildren2","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","valueOf","NativeAnimatedAPI","NativeAnimatedHelper","API","defaultColor","g","b","processColor","color","undefined","isRgbaValue","normalizedColor","normalizeColor","processedColorObj","processColorObject","isRgbaAnimatedValue","AnimatedValue","AnimatedColor","_AnimatedWithChildren","_super","valueIn","config","_this","_suspendCallbacks","rgbaAnimatedValue","_processColor","processedColor","initColor","nativeColor","useNativeDriver","__makeNative","key","setValue","_processColor2","_this2","shouldUpdateNodeConfig","__isNative","nativeTag","__getNativeTag","setWaitingForIdentifier","toString","_withSuspendedCallbacks","rgbaValue","updateAnimatedNodeConfig","__getNativeConfig","unsetWaitingForIdentifier","flushValue","__callListeners","__getValue","setOffset","offset","flattenOffset","extractOffset","stopAnimation","callback","resetAnimation","__attach","__addChild","__detach","__removeChild","platformConfig","type","AnimatedWithChildren"],"sources":["/Users/chanvirakphal/Project-Khmer/app/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {NativeColorValue} from '../../StyleSheet/PlatformColorValueTypes';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport {processColorObject} from '../../StyleSheet/PlatformColorValueTypes';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedValue, {flushValue} from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport type AnimatedColorConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\n\ntype ColorListenerCallback = (value: ColorValue) => mixed;\n\nexport type RgbaValue = {\n  +r: number,\n  +g: number,\n  +b: number,\n  +a: number,\n  ...\n};\n\ntype RgbaAnimatedValue = {\n  +r: AnimatedValue,\n  +g: AnimatedValue,\n  +b: AnimatedValue,\n  +a: AnimatedValue,\n  ...\n};\n\nexport type InputValue = ?(RgbaValue | RgbaAnimatedValue | ColorValue);\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\nconst defaultColor: RgbaValue = {r: 0, g: 0, b: 0, a: 1.0};\n\n/* eslint no-bitwise: 0 */\nfunction processColor(\n  color?: ?(ColorValue | RgbaValue),\n): ?(RgbaValue | NativeColorValue) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n\n  if (isRgbaValue(color)) {\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    return (color: RgbaValue);\n  }\n\n  let normalizedColor: ?ProcessedColorValue = normalizeColor(\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    (color: ColorValue),\n  );\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processedColorObj: ?NativeColorValue =\n      processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    const r: number = (normalizedColor & 0xff000000) >>> 24;\n    const g: number = (normalizedColor & 0x00ff0000) >>> 16;\n    const b: number = (normalizedColor & 0x0000ff00) >>> 8;\n    const a: number = (normalizedColor & 0x000000ff) / 255;\n\n    return {r, g, b, a};\n  }\n\n  return null;\n}\n\nfunction isRgbaValue(value: any): boolean {\n  return (\n    value &&\n    typeof value.r === 'number' &&\n    typeof value.g === 'number' &&\n    typeof value.b === 'number' &&\n    typeof value.a === 'number'\n  );\n}\n\nfunction isRgbaAnimatedValue(value: any): boolean {\n  return (\n    value &&\n    value.r instanceof AnimatedValue &&\n    value.g instanceof AnimatedValue &&\n    value.b instanceof AnimatedValue &&\n    value.a instanceof AnimatedValue\n  );\n}\n\nexport default class AnimatedColor extends AnimatedWithChildren {\n  r: AnimatedValue;\n  g: AnimatedValue;\n  b: AnimatedValue;\n  a: AnimatedValue;\n  nativeColor: ?NativeColorValue;\n\n  _suspendCallbacks: number = 0;\n\n  constructor(valueIn?: InputValue, config?: ?AnimatedColorConfig) {\n    super();\n\n    let value: RgbaValue | RgbaAnimatedValue | ColorValue =\n      valueIn ?? defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      // $FlowIgnore[incompatible-cast] - Type is verified above\n      const rgbaAnimatedValue: RgbaAnimatedValue = (value: RgbaAnimatedValue);\n      this.r = rgbaAnimatedValue.r;\n      this.g = rgbaAnimatedValue.g;\n      this.b = rgbaAnimatedValue.b;\n      this.a = rgbaAnimatedValue.a;\n    } else {\n      const processedColor: RgbaValue | NativeColorValue =\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        processColor((value: ColorValue | RgbaValue)) ?? defaultColor;\n      let initColor: RgbaValue = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        initColor = (processedColor: RgbaValue);\n      } else {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        this.nativeColor = (processedColor: NativeColorValue);\n      }\n\n      this.r = new AnimatedValue(initColor.r);\n      this.g = new AnimatedValue(initColor.g);\n      this.b = new AnimatedValue(initColor.b);\n      this.a = new AnimatedValue(initColor.a);\n    }\n\n    if (config?.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   */\n  setValue(value: RgbaValue | ColorValue): void {\n    let shouldUpdateNodeConfig = false;\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n    }\n\n    const processedColor: RgbaValue | NativeColorValue =\n      processColor(value) ?? defaultColor;\n    this._withSuspendedCallbacks(() => {\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const rgbaValue: RgbaValue = processedColor;\n        this.r.setValue(rgbaValue.r);\n        this.g.setValue(rgbaValue.g);\n        this.b.setValue(rgbaValue.b);\n        this.a.setValue(rgbaValue.a);\n        if (this.nativeColor != null) {\n          this.nativeColor = null;\n          shouldUpdateNodeConfig = true;\n        }\n      } else {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const nativeColor: NativeColorValue = processedColor;\n        if (this.nativeColor !== nativeColor) {\n          this.nativeColor = nativeColor;\n          shouldUpdateNodeConfig = true;\n        }\n      }\n    });\n\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      if (shouldUpdateNodeConfig) {\n        NativeAnimatedAPI.updateAnimatedNodeConfig(\n          nativeTag,\n          this.__getNativeConfig(),\n        );\n      }\n      NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());\n    } else {\n      flushValue(this);\n    }\n\n    // $FlowFixMe[incompatible-call]\n    this.__callListeners(this.__getValue());\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   */\n  setOffset(offset: RgbaValue): void {\n    this.r.setOffset(offset.r);\n    this.g.setOffset(offset.g);\n    this.b.setOffset(offset.b);\n    this.a.setOffset(offset.a);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   */\n  flattenOffset(): void {\n    this.r.flattenOffset();\n    this.g.flattenOffset();\n    this.b.flattenOffset();\n    this.a.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   */\n  extractOffset(): void {\n    this.r.extractOffset();\n    this.g.extractOffset();\n    this.b.extractOffset();\n    this.a.extractOffset();\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   */\n  stopAnimation(callback?: ColorListenerCallback): void {\n    this.r.stopAnimation();\n    this.g.stopAnimation();\n    this.b.stopAnimation();\n    this.a.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   */\n  resetAnimation(callback?: ColorListenerCallback): void {\n    this.r.resetAnimation();\n    this.g.resetAnimation();\n    this.b.resetAnimation();\n    this.a.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  __getValue(): ColorValue {\n    if (this.nativeColor != null) {\n      return this.nativeColor;\n    } else {\n      return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n    }\n  }\n\n  __attach(): void {\n    this.r.__addChild(this);\n    this.g.__addChild(this);\n    this.b.__addChild(this);\n    this.a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach(): void {\n    this.r.__removeChild(this);\n    this.g.__removeChild(this);\n    this.b.__removeChild(this);\n    this.a.__removeChild(this);\n    super.__detach();\n  }\n\n  _withSuspendedCallbacks(callback: () => void) {\n    this._suspendCallbacks++;\n    callback();\n    this._suspendCallbacks--;\n  }\n\n  __callListeners(value: number): void {\n    if (this._suspendCallbacks === 0) {\n      super.__callListeners(value);\n    }\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this.r.__makeNative(platformConfig);\n    this.g.__makeNative(platformConfig);\n    this.b.__makeNative(platformConfig);\n    this.a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): {...} {\n    return {\n      type: 'color',\n      r: this.r.__getNativeTag(),\n      g: this.g.__getNativeTag(),\n      b: this.b.__getNativeTag(),\n      a: this.a.__getNativeTag(),\n      nativeColor: this.nativeColor,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}